* Tasks
** DONE Initial project
CLOSED: [2016-10-16 ndz 15:47]
** TODO Encrypted communication
** TODO MultiJVM testing
** DONE Env actor
CLOSED: [2016-10-21 ptk 15:03]
** DONE Async logging
CLOSED: [2016-10-21 ptk 15:03]
** TODO communication chart
** TODO nice characters in source code
** TODO badges in README.md
** TODO Submit bug to scapi
*** clang -> gcc
*** compilation flags on El Capitan
*** comment out code in submodule (submit bug to that project as well)
*** scapi jar does not compile (but can be found in assets!)
*** manually install jni extensions
** TODO docs
* Links
http://scapi.readthedocs.io/en/latest/mid_layer/asymmetric_enc.html#damgard-jurik-encryption-scheme
http://scapi.readthedocs.io/en/latest/interactive_layer/sigma_protocols.html
https://github.com/kushti/scapi-cookbook/blob/master/SDK_Pseudocode.pdf
* Questions

1. "The users send their numbers in an encrypted form to the broker."

Can I just use SSL to encrypt traffic? Akka supports that out of the box. See akka.remote.netty.ssl configuration section here: http://doc.akka.io/docs/akka/2.4/general/configuration.html#akka-remote__artery_

2. "Implement the users and the broker as different actors and route all the messages via the environment actor logging all the messages coming in."

Why routing? If all messages are routed via Env Actor and this Actor dies then whole communication in the system would stop.
Sending each message to two destinations - original and to Env Actor is much safer.
